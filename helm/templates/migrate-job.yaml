// filepath: /workspaces/msfs-top-aircraft/helm/templates/migrate-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: prisma-migrate-{{ .Release.Revision }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"  # Ensure this runs before backend deployment
  labels:
    app: prisma-migrate
    release: {{ .Release.Name }}
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300  # 5 minutes timeout for the job
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: migrate
          image: {{ .Values.migrate.image }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: DATABASE_URL
          command: 
            - "sh"
            - "-c"
            - |
              echo "Starting migration job..."
              # Make sure Prisma client can be generated
              npx prisma generate
              
              # Check for successful generation
              if [ $? -ne 0 ]; then
                echo "Failed to generate Prisma client. Attempting to fix dependencies..."
                npm install --no-save prisma @prisma/client
                npx prisma generate --verbose
                if [ $? -ne 0 ]; then
                  echo "Still failed to generate Prisma client. Exiting."
                  exit 1
                fi
              fi
              
              # Run the migrations
              echo "Running migrations..."
              npx prisma migrate deploy
              
              # Check for successful migration
              if [ $? -ne 0 ]; then
                echo "Migration failed. Exiting."
                exit 1
              fi
              
              # Import initial data
              echo "Importing initial data..."
              node dist/import-initial-data.js
